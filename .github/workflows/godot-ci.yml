name: "godot-ci export"
on: push


env:
  GODOT_VERSION: 4.3
  # The export name may include spaces, but only use special characters sparingly as these will be used within a file name.
  EXPORT_NAME: "test-project"
  # NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".
  PROJECT_PATH: "test-project"

jobs:
  builds:
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Linux
          export_template: "Linux/X11"
          ext: "x86_64"
        - name: Windows
          export_template: "Windows Desktop"
          ext: "exe"
        - name: macOS
          export_template: "macOS"
          ext: "zip"
        - name: Android
          export_template: "Android"
          ext: "apk"
    runs-on: ubuntu-22.04
    permissions: write-all
    container:
      image: barichello/godot-ci:4.3
    name: Export ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
        # For Android exports, you may want to store your keystore as a secret, or Android will give you errors when trying to update the app
        # with this artifact, as the keystore is being regenerated each time the container is launched. Run
        # the commands described in the "Android" section of README.md on your local machine and put the base64-encoded keystore into a secret.
        # Then, uncomment the lines below:
        #  echo "$KEYSTORE" | base64 -d > /root/debug.keystore
        #env:
        #  KEYSTORE: ${{ secrets.SECRET_KEYSTORE_BASE64 }}
      - name: ${{ matrix.name }} Build
        run: |
          mkdir -v -p "build/${{ matrix.name }}"
          EXPORT_DIR="$(readlink -f build)"
          cd "$PROJECT_PATH"
          godot --headless --verbose --export-release "${{ matrix.export_template }}" "${EXPORT_DIR}/${{ matrix.name }}/${EXPORT_NAME}.${{ matrix.ext }}"
        env:
          # NOTE: The values below are default values. They are not secret.
          # Leave them as is unless you customized them, they are needed for `--export-release` above.
          GODOT_ANDROID_KEYSTORE_RELEASE_PATH: "/root/debug.keystore"
          GODOT_ANDROID_KEYSTORE_RELEASE_USER: "androiddebugkey"
          GODOT_ANDROID_KEYSTORE_RELEASE_PASSWORD: "android"
          # Uncomment if you modified your keystore.
          #GODOT_ANDROID_KEYSTORE_DEBUG_USER: ${{ secrets.SECRET_KEYSTORE_USER }}
          #GODOT_ANDROID_KEYSTORE_DEBUG_PASSWORD: ${{ secrets.SECRET_KEYSTORE_PASSWORD }}
      - name: Upload Artifact - ${{ matrix.name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: build/${{ matrix.name }}

  export-web:
    name: Export Web
    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/web # The folder the action should deploy.
